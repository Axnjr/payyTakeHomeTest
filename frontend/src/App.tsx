import { useState, useEffect, useRef } from 'react'
import "./assets/App.css"

function App() {
	const [count, setCount] = useState(1);
	const [incrementBy, setIncrementBy] = useState(3);
	const [intervalTime, setIntervalTime] = useState(2000);
	const [isRunning, setIsRunning] = useState(false);
	const intervalRef = useRef<number | null>(null);

	const handleIncrement = () => setCount((prev) => prev + incrementBy);
	const handleDecrement = () => setCount((prev) => prev - incrementBy <= 0 ? 0 : prev - incrementBy);

	const toggleAutoIncrement = () => {
		setIsRunning((prev) => !prev);
	};

	useEffect(() => {
		if (isRunning) {
			intervalRef.current = setInterval(() => {
				setCount((prev) => prev + incrementBy);
			}, intervalTime);
		} else {
			if (intervalRef.current) clearInterval(intervalRef.current);
		}

		return () => {
			if (intervalRef.current) clearInterval(intervalRef.current);
		};
	}, [isRunning, intervalTime, incrementBy]);

	return (
		<main className='flex-row justify-center items-center tracking-tighter'>
			<svg
				className='w-32 m-8 absolute'
				viewBox="0 0 80 14"
				fill="none"
				xmlns="http://www.w3.org/2000/svg"
			>
				<path
					fillRule="evenodd"
					clipRule="evenodd"
					d="M66.5524 4.26889L69.2847 9.77545H71.0019C70.7793 10.1482 70.562 10.4225 70.35 10.5986C70.1486 10.7746 69.9154 10.8885 69.6504 10.9402C69.396 10.992 69.0409 11.0179 68.5851 11.0179C67.9597 11.0179 66.9368 10.8626 65.5165 10.552V13.2698C66.1313 13.4458 66.7567 13.5804 67.3926 13.6736C68.0286 13.7667 68.6063 13.8133 69.1257 13.8133C70.0797 13.8133 70.9012 13.6477 71.5902 13.3164C72.2792 12.9954 72.8727 12.5243 73.3709 11.9031C73.8797 11.2922 74.3726 10.5054 74.8496 9.54249L79.3333 0.45724H75.6287L72.0195 7.78756L68.4298 0.464706L68.4335 0.45724H68.4261H64.7288H64.7215L64.7252 0.464718L64.7143 0.48672L66.5524 4.26889ZM64.1865 1.16496L60.9257 7.78756L57.3324 0.45724H53.6278L58.191 9.77545H59.9082C59.6856 10.1482 59.4683 10.4225 59.2563 10.5986C59.0549 10.7746 58.8217 10.8885 58.5567 10.9402C58.3023 10.992 57.9472 11.0179 57.4914 11.0179C56.866 11.0179 55.8431 10.8626 54.4228 10.552V13.2698C55.0375 13.4458 55.6629 13.5804 56.2989 13.6736C56.9349 13.7667 57.5126 13.8133 58.032 13.8133C58.986 13.8133 59.8075 13.6477 60.4965 13.3164C61.1854 12.9954 61.779 12.5243 62.2772 11.9031C62.786 11.2922 63.2789 10.5054 63.7559 9.54249L66.0242 4.94634L64.1865 1.16496ZM37.8886 0.683638C37.1042 0.352324 36.2615 0.186666 35.3606 0.186666C34.4278 0.186666 33.5692 0.347147 32.7848 0.668107C32.011 0.978714 31.3962 1.47568 30.9404 2.15902V0.497273H27.2835V13.5428H30.9404V8.15373C31.3962 8.83707 32.011 9.33922 32.7848 9.66018C33.5692 9.97078 34.4278 10.1261 35.3606 10.1261C36.2615 10.1261 37.1042 9.96561 37.8886 9.64465C38.673 9.31333 39.3143 8.78012 39.8125 8.04502C40.3213 7.29956 40.5757 6.33668 40.5757 5.15638C40.5757 3.97607 40.3213 3.01837 39.8125 2.28326C39.3143 1.53781 38.673 1.0046 37.8886 0.683638ZM36.0283 6.67835C35.5514 7.00966 34.8253 7.17532 33.8501 7.17532C32.8749 7.17532 32.1435 7.00966 31.6559 6.67835C31.1789 6.34704 30.9404 5.83971 30.9404 5.15638C30.9404 4.47304 31.1789 3.96572 31.6559 3.6344C32.1435 3.30309 32.8749 3.13743 33.8501 3.13743C34.8253 3.13743 35.5514 3.30309 36.0283 3.6344C36.5159 3.96572 36.7597 4.47304 36.7597 5.15638C36.7597 5.83971 36.5159 6.34704 36.0283 6.67835ZM48.555 0.186666C49.9118 0.186666 51.0195 0.347147 51.8781 0.668107C52.7472 0.989067 53.3938 1.50675 53.8178 2.22114C54.2524 2.92518 54.475 3.86736 54.4856 5.04766V7.43157V9.81548H50.8287V8.57305C50.0337 9.04932 49.1539 9.40134 48.1893 9.62912C47.2353 9.85689 46.3079 9.97079 45.4069 9.97079C44.0607 9.97079 42.9901 9.73783 42.1951 9.27192C41.4001 8.80601 41.0026 8.0502 41.0026 7.00449C41.0026 5.84489 41.5273 5.02696 42.5767 4.55069C43.6261 4.06408 44.9299 3.82077 46.4881 3.82077C47.8342 3.82077 49.2811 3.97607 50.8287 4.28668C50.7863 3.68617 50.5107 3.26685 50.0019 3.02872C49.5037 2.79059 48.7935 2.67152 47.8713 2.67152C47.0339 2.67152 46.1807 2.73364 45.3115 2.85789C44.4529 2.97177 43.4459 3.15814 42.2905 3.41698L41.7817 0.978714C44.2091 0.450682 46.4669 0.186666 48.555 0.186666ZM46.663 7.48593C47.5321 7.48593 48.9207 7.33063 50.8287 7.02002V6.30562C49.3447 6.09855 48.078 5.99502 47.0286 5.99502C46.2231 5.99502 45.6507 6.05196 45.3115 6.16585C44.9829 6.27974 44.8186 6.47646 44.8186 6.756C44.8186 7.0252 44.9564 7.21674 45.232 7.33063C45.5076 7.43416 45.9846 7.48593 46.663 7.48593Z"
					fill="#242424"
				/>
				<path
					d="M16.1166 2.78068C13.7495 0.467359 11.5484 -0.0936394 10.5765 0.0120777V6.65673C11.5484 6.55101 13.7243 6.53368 16.1166 9.36381C18.5089 12.1939 20.1813 11.8075 21.1531 11.7017V5.05709C20.1813 5.16281 18.4838 5.094 16.1166 2.78068Z"
					fill="#242424"
				/>
				<path
					d="M5.54009 5.00074C3.17296 2.68742 0.971819 2.12642 0 2.23214V8.87679C0.971819 8.77107 3.14778 8.75374 5.54009 11.5839C7.93241 14.414 9.60472 14.0275 10.5765 13.9218V7.27715C9.60472 7.38286 7.90722 7.31406 5.54009 5.00074Z"
					fill="#242424"
				/>
			</svg>
			<div className="flex flex-col items-center justify-center min-h-screen p-6">
				<h1 className="text-9xl m-4">{count}</h1>
				<div>
					<div className="flex gap-8 mt-4">
						<button onClick={handleIncrement} className="normal px-8 py-2 bg-neutral-800 text-white rounded-xl">
							Increment
						</button>
						<button onClick={handleDecrement} className="normal px-8 py-2 bg-neutral-800 text-white rounded-xl">
							Decrement
						</button>
					</div>
					<div className="mt-4 flex items-center text-right border-2 border-neutral-500 px-3 py-2 w-full rounded-xl bg-[#d5f22f]">
						<input
							type="number"
							value={incrementBy}
							onChange={(e) => setIncrementBy(Number(e.target.value))}
							className="outline-none bg-transparent"
						/>
						<span className='normal text-neutral-500'>increment by</span>
					</div>
					<div className="normal mt-6 text-lg text-neutral-500">Auto increment</div>
					<button
						onClick={toggleAutoIncrement}
						className="mt-2 px-4 py-2 bg-neutral-800 text-white rounded-xl flex items-center"
					>
						{
							isRunning 
								? 
							<div className='flex items-center gap-2 px-3'>
								<svg className='w-4' viewBox="0 0 13 13" fill="none" xmlns="http://www.w3.org/2000/svg">
									<g clipPath="url(#clip0_1_136)">
										<path d="M6.5 0C4.77594 0 3.1226 0.685035 1.90385 1.90385C0.6851 3.12267 0 4.77607 0 6.5C0 8.22393 0.685035 9.8774 1.90385 11.0962C3.12267 12.3149 4.77607 13 6.5 13C8.22393 13 9.8774 12.315 11.0962 11.0962C12.3149 9.87734 13 8.22393 13 6.5C13 4.77607 12.315 3.1226 11.0962 1.90385C9.87734 0.6851 8.22393 0 6.5 0ZM6.5 12.0002C5.04153 12.0002 3.6426 11.4208 2.61066 10.3893C1.57929 9.35747 0.99983 7.95847 0.99983 6.5C0.99983 5.04153 1.57924 3.6426 2.61066 2.61066C3.64254 1.57929 5.04153 0.99983 6.5 0.99983C7.95847 0.99983 9.3574 1.57924 10.3893 2.61066C11.4207 3.64254 12.0002 5.04153 12.0002 6.5C12.0002 7.95847 11.4208 9.3574 10.3893 10.3893C9.35747 11.4207 7.95847 12.0002 6.5 12.0002ZM5.9998 4.50034V8.49992C5.9998 8.56645 5.9739 8.62992 5.92668 8.67715C5.87996 8.72387 5.81648 8.75028 5.74995 8.75028H4.75007C4.61195 8.75028 4.50022 8.63805 4.50022 8.49992V4.50034C4.50022 4.36222 4.61194 4.24999 4.75007 4.24999H5.74995C5.81648 4.24999 5.87995 4.27639 5.92668 4.32311C5.9739 4.37034 5.9998 4.43381 5.9998 4.50034ZM8.4997 4.50034V8.49992C8.4997 8.56645 8.4738 8.62992 8.42658 8.67715C8.37986 8.72387 8.31638 8.75028 8.24985 8.75028H7.24997C7.11185 8.75028 7.00012 8.63805 7.00012 8.49992V4.50034C7.00012 4.36222 7.11184 4.24999 7.24997 4.24999H8.24985C8.31638 4.24999 8.37985 4.27639 8.42658 4.32311C8.4738 4.37034 8.4997 4.43381 8.4997 4.50034Z" fill="white"/>
									</g>
									<defs><clipPath id="clip0_1_163"><rect width={13} height={13} fill="white" /></clipPath></defs>
								</svg> 
								<h1>Stop</h1>
							</div>
								:
							<div className='flex items-center gap-2 px-3'>
								<svg className='w-4' viewBox="0 0 13 13" fill="none" xmlns="http://www.w3.org/2000/svg">
									<g clipPath="url(#clip0_1_136)">
										<path d="M6.5 0C4.77594 0 3.1226 0.685035 1.90385 1.90385C0.6851 3.12267 0 4.77607 0 6.5C0 8.22393 0.685035 9.8774 1.90385 11.0962C3.12267 12.3149 4.77607 13 6.5 13C8.22393 13 9.8774 12.315 11.0962 11.0962C12.3149 9.87734 13 8.22393 13 6.5C13 4.77607 12.315 3.1226 11.0962 1.90385C9.87734 0.6851 8.22393 0 6.5 0ZM6.5 12.0002C5.04153 12.0002 3.6426 11.4208 2.61066 10.3893C1.57929 9.35747 0.99983 7.95847 0.99983 6.5C0.99983 5.04153 1.57924 3.6426 2.61066 2.61066C3.64254 1.57929 5.04153 0.99983 6.5 0.99983C7.95847 0.99983 9.3574 1.57924 10.3893 2.61066C11.4207 3.64254 12.0002 5.04153 12.0002 6.5C12.0002 7.95847 11.4208 9.3574 10.3893 10.3893C9.35747 11.4207 7.95847 12.0002 6.5 12.0002Z" fill="white"/><path d="M8.86632 5.98652L5.7123 3.94534C5.32421 3.69181 4.81482 3.98347 4.81482 4.46528V8.53472C4.81482 9.01653 5.31237 9.30819 5.7123 9.05466L8.86632 7.01348C9.24209 6.7852 9.24209 6.22768 8.86632 5.98652Z"fill="white"/>
									</g>
									<defs><clipPath id="clip0_1_136"><rect width={13} height={13} fill="white" /></clipPath></defs>
								</svg> 
								<h1>Start</h1>
							</div> 
						}
					</button>
					<div className="flex-row items-center mt-4 w-full">
						<input
							type="range"
							min="50"
							max="4000"
							step="10"
							value={intervalTime}
							onChange={(e) => setIntervalTime(Number(e.target.value))}
							className="w-full "
						/>
						<span className="ml-4">{intervalTime / 1000} seconds</span>
					</div>
				</div>
			</div>
		</main>
	)
}

export default App
